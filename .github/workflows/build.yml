name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  plugin_test:
    name: asdf plugin test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Install SVN build dependencies
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential autoconf automake libtool pkg-config \
              libssl-dev libsqlite3-dev libapr1-dev libaprutil1-dev
          else
            # macOS - install dependencies via homebrew
            brew install autoconf automake libtool pkg-config openssl sqlite apr apr-util
            
            # Debug: Check what homebrew installed and where
            echo "=== Homebrew APR Debug Info ==="
            echo "APR install location:"
            find $(brew --prefix) -name "*apr*config*" 2>/dev/null || echo "No apr config files found"
            echo "APR packages:"
            brew list | grep apr || echo "No APR packages found"
            echo "APR-UTIL packages:"
            brew list | grep apr || echo "No APR-UTIL packages found"
            echo "Homebrew prefix: $(brew --prefix)"
            echo "==============================="
          fi

      - name: Install asdf
        uses: asdf-vm/actions/setup@v3
        
      - name: Test plugin installation and functionality
        env:
          ASDF_SVN_SKIP_DEPS_CHECK: "true"
        run: |
          # Add plugin from local directory
          asdf plugin add svn "${{ github.workspace }}"
          
          # Test list-all command and show version selection logic
          echo "Testing asdf list-all svn..."
          echo "First 5 versions:"
          asdf list-all svn | head -5
          echo "Last 5 versions:"
          asdf list-all svn | tail -5
          echo "All versions:"
          asdf list-all svn
          
          # Get a recent, stable version for testing (not ancient 1.0.0)
          # Filter for versions 1.14+ which should be compatible with modern dependencies
          recent_version=$(asdf list-all svn | grep -E '^1\.1[4-9]\.' | tail -1)
          if [ -z "$recent_version" ]; then
            # Fallback: get the latest version that's not 1.0.0
            recent_version=$(asdf list-all svn | grep -v '^1\.0\.' | tail -1)
          fi
          echo "Testing with SVN version: $recent_version"
          
          # Install the selected version
          echo "Installing SVN version: $recent_version"
          asdf install svn "$recent_version"
          
          # Set it as global
          asdf global svn "$recent_version"
          
          # Test that SVN works
          echo "Testing svn --version:"
          svn --version
